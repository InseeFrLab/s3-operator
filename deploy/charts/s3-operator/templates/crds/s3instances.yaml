{{- if .Values.crds.install }}
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    {{- if .Values.crds.keep }}
    helm.sh/resource-policy: keep
    {{- end }}
    controller-gen.kubebuilder.io/version: v0.11.1
  labels:
  {{- include "s3-operator.labels" . | nindent 4 }}
  name: s3instances.s3.onyxia.sh
spec:
  group: s3.onyxia.sh
  names:
    kind: S3Instance
    listKind: S3InstanceList
    plural: s3instances
    singular: s3instance
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: S3Instance is the Schema for the S3Instances API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: S3InstanceSpec defines the desired state of S3Instance
            properties:
              allowedNamespaces:
                description: AllowedNamespaces to use this S3InstanceUrl if empty
                  only the namespace of this instance url is allowed to use it
                items:
                  type: string
                type: array
              bucketDeletionEnabled:
                default: false
                description: BucketDeletionEnabled Trigger bucket deletion on the
                  S3 backend upon CR deletion. Will fail if bucket is not empty.
                type: boolean
              caCertSecretRef:
                description: Secret containing key ca.crt with the certificate associated
                  to the S3InstanceUrl
                type: string
              pathDeletionEnabled:
                default: false
                description: PathDeletionEnabled Trigger path deletion on the S3 backend
                  upon CR deletion. Limited to deleting the `.keep` files used by
                  the operator.
                type: boolean
              policyDeletionEnabled:
                default: false
                description: PolicyDeletionEnabled Trigger policy deletion on the
                  S3 backend upon CR deletion.
                type: boolean
              region:
                description: region associated to the S3Instance
                type: string
              s3Provider:
                default: minio
                description: type of the S3Instance
                enum:
                - minio
                - mockedS3Provider
                type: string
                x-kubernetes-validations:
                - message: S3Provider is immutable
                  rule: self == oldSelf
              s3UserDeletionEnabled:
                default: false
                description: S3UserDeletionEnabled Trigger S3 deletion on the S3 backend
                  upon CR deletion.
                type: boolean
              secretRef:
                description: Ref to Secret associated to the S3Instance containing
                  accessKey and secretKey
                type: string
              url:
                description: url of the S3Instance
                type: string
            required:
            - bucketDeletionEnabled
            - pathDeletionEnabled
            - policyDeletionEnabled
            - s3Provider
            - s3UserDeletionEnabled
            - secretRef
            - url
            type: object
          status:
            description: S3InstanceStatus defines the observed state of S3Instance
            properties:
              conditions:
                description: 'Status management using Conditions. See also : https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
{{- end }}